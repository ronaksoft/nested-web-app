stages:
  - build
  - deploy

variables:
  BUILD_DIR: $CI_PROJECT_DIR/build

image: "registry.ronaksoftware.com/base/node:builder"

build:desktop:
  stage: build
  only:
      - master
      - develop
  script:
    - cp -a ./. /var/lib/desktop
    - cd /var/lib/desktop
    - ls ./node_modules
    - apk add --update python build-base
    - npm install -g bower
    - npm install
    - bower install
    - npm rebuild node-sass
    - ./node_modules/.bin/gulp build --mode=production --ver=$CI_PIPELINE_ID
    - mkdir -p $BUILD_DIR/desktop
    - ls ./dist/production/app
    - cp -r ./dist/production/* $BUILD_DIR/desktop
    - cp ./lws.config.js $BUILD_DIR/desktop
    - mkdir -p $BUILD_DIR/bin
    - cp -a ./bin/. $BUILD_DIR/bin
    - find . -type f -not -name \*.html -exec rm -rf {} \;
    - rm -rf ./src/index.html
    - cp -a ./src/. $BUILD_DIR/desktop

  artifacts:
    untracked: true
    expire_in: 1 hour


build:mobile:
  stage: build
  only:
      - master
      - develop
  script:
    - mkdir -p /var/lib/mobile-org
    - cd /var/lib/mobile-org
    - git clone http://gitlab-ci-token:$CI_BUILD_TOKEN@git.ronaksoftware.com/nested/web-mobile-app.git .
    - git checkout master
    - cp -a ./. /var/lib/mobile
    - cd /var/lib/mobile
    - npm install
    - npm run build:prod
    - mkdir -p $BUILD_DIR/mobile
    - cp ./package.json $BUILD_DIR/mobile
    - cp -a ./node_modules $BUILD_DIR/mobile
    - cp -a ./src $BUILD_DIR/mobile
    - cp -a ./build $BUILD_DIR/mobile/build
  artifacts:
    untracked: true
    expire_in: 1 hour

deploy:production:
  image: gitlab/dind
  stage: deploy
  only:
    - master
  services:
    - docker:dind
  script:
    - export TAG=`git describe --abbrev=0 --tags`
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$TAG .
    - docker push $CI_REGISTRY_IMAGE:$TAG
  dependencies:
    - build:mobile
    - build:desktop


deploy:develop:
  image: gitlab/dind
  stage: deploy
  only:
    - develop
  services:
    - docker:dind
  variables:
    IMAGE_TAG: "dev"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  dependencies:
    - build:mobile
    - build:desktop


deploy:business:
  image: gitlab/dind
  stage: deploy
  only:
    - business
  services:
    - docker:dind
  variables:
    IMAGE_TAG: "business"
  script:
    - export TAG=`git describe --abbrev=0 --tags`
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$TAG
    - docker tag $CI_REGISTRY_IMAGE:$TAG $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
